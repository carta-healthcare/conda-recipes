package:
  name: django-pipeline
  version: "1.6.8"

source:
  fn: django-pipeline-1.6.8.tar.gz
  url: https://pypi.python.org/packages/53/13/149da7d9005fae017c85987b3aa21ad55a66a52a63850fa8af881a127c28/django-pipeline-1.6.8.tar.gz
  md5: b7440f82daa0ad9256128d48a31d848e
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-pipeline = django-pipeline:main
    #
    # Would create an entry point called django-pipeline that calls django-pipeline.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - futures >=2.1.3

  run:
    - python
    - futures >=2.1.3

test:
  # Python imports
  imports:
    - pipeline
    - pipeline.compilers
    - pipeline.compressors
    - pipeline.jinja2
    - pipeline.templatetags

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/jazzband/django-pipeline
  license: MIT License
  summary: 'Pipeline is an asset packaging library for Django.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
